version: "3.8"

services:
  db:
    image: postgres:16.0-alpine
    volumes:
      - ./db_init:/docker-entrypoint-initdb.d:Z
    ports:
      - "5433:5432"
    env_file:
      - ./db.env
    networks:
      - em_network
  
  # products-service:
  #   build:
  #     context: ./services/products/
  #     dockerfile: Dockerfile
  #   container_name: products-service
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - db
  #   volumes:
  #     - ./services/products:/app:z
  #   user: root
  #   networks:
  #     - em_network

  # history-service:
  #   build:
  #     context: ./services/history/
  #     dockerfile: Dockerfile
  #   container_name: history-service
  #   ports:
  #     - "3001:3001"
  #   depends_on:
  #     - db
  #   volumes:
  #     - ./services/history:/app:z
  #   user: root
  #   networks:
  #     - em_network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - em_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - em_network

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_BROKER_ID: 1
    depends_on:
      - zookeeper
    networks:
      - em_network

networks:
  em_network:

volumes:
  db_init:
